@model TCC.Models.Dashboard

@{
    ViewData["Title"] = "Home Page";
    Layout = "_LayoutWithNav";
}

@{
    double currentBalance = 0;
    Model.Accounts.ForEach(x => currentBalance += x.Balance);

    double totalExpenses = 0;
    Model.Expenses.ForEach(x => totalExpenses += x.Value);

    double totalIncomes = 0;
    Model.Incomes.ForEach(x => totalIncomes += x.Value);
}

@section Home {
    <link rel="stylesheet" href="~/css/home.css">
    <script src="https://code.highcharts.com/highcharts.js"></script>
}

<div style="display: block"></div>

<div class="dashboard">
    <h1>Dashboard</h1>

    <div class="valuesInfo">
        <button type="button" onclick="location.href = '/Accounts'" class="btn btn-secondary btn-xl infoButtons" id="accountsBalance">
            <h3>Current balance</h3>
            <h3>R$ @currentBalance.ToString("F")</h3>
        </button>
        <button type="button" onclick="location.href = '/Incomes'" class="btn btn-secondary btn-xl infoButtons" id="incomesBalance">
            <h3>Incomes</h3>
            <h3 class="text-success">R$ @totalIncomes.ToString("F")</h3>
        </button>
        <button type="button" onclick="location.href = '/Expenses'" class="btn btn-secondary btn-xl infoButtons" id="expensesBalance">
            <h3>Expenses</h3>
            <h3 class="text-danger">R$ @totalExpenses.ToString("F")</h3>
        </button>
    </div>
    <div class="charts">
        <div id="expensesChartDiv">
            <h2>Expenses by category</h2>
            <div class="card card-block text-center chart">
                <div id="chart1" style="width: 350px; height: 350px;"></div>
            </div>
        </div>
        <div id="incomesChartDiv">
            <h2>Incomes by category</h2>
            <div class="card card-block text-center chart">
                <div id="chart2" style="width: 350px; height: 350px;"></div>
            </div>
        </div>
    </div>
    <div class="accountsAndGoals">
        <div id="accountsDiv">
            <h2>My accounts</h2>
            <div class="card card-block" id="accounts">
                @foreach(var account in Model.Accounts)
                {
                    <div class="account">
                        <h4>@account.Name</h4>
                        <div class="accountBalance">
                            <a>Current balance</a>
                            <a class="text-success">R$ @account.Balance.ToString("F")</a>
                        </div>
                    </div>
                }
                <hr>
                <h2 onclick="location.href = '/Accounts'" class="text-center clickable">See more</h2>
            </div>
        </div>
        <div id="goalsDiv">
            <h2>Goals</h2>
            <div class="card card-block" id="goals">
                @foreach(var goal in Model.Goals)
                {
                    <div class="goal">
                        <h4>@goal.Name</h4>
                        <progress class="progress" value="@(goal.CurrentBalance / goal.FinalBalance * 100)" max="100" aria-describedby="example-caption-1"></progress>
                        <div id="example-caption-1">R$ @goal.CurrentBalance of R$ @goal.FinalBalance</div>
                    </div>
                }
                <hr>
                <h2 onclick="location.href = '/Goals'" class="text-center clickable">See more</h2>
            </div>
        </div>
    </div>
</div>

<script>
        var chart = Highcharts.chart('chart1', {
            chart: {
                type: 'pie'
            },
            title: {
                text: ''
            },
            credits: {
                enabled: false
            },
            tooltip: {
                enabled: false
            },
            plotOptions: {
                pie: {
                    innerSize: '70%',
                    dataLabels: {
                        enabled: false
                    },
                    showInLegend: false,
                    point: {
                        events: {
                            mouseOver: function () {
                                var centerX = chart.plotLeft + (chart.plotWidth * 0.5);
                                var centerY = chart.plotTop + (chart.plotHeight * 0.43);

                                var total = 0;
                                for (var i = 0, len = this.series.data.length; i < len; i++) {
                                    total += this.series.data[i].y;
                                }

                                var teste = this.name + '<br><br>' + 'R$ ' + this.y.toFixed(2) + '<br><br>' + (this.y / total * 100).toFixed(2) + '%';

                                chart.centerText = chart.renderer.text(teste, centerX, centerY).attr({
                                    align: 'center'
                                }).css({
                                    fontSize: '1.5em',
                                }).add();
                            },
                            mouseOut: function () {
                                chart.centerText.destroy();
                            }
                        }
                    }
                }
            },
            series: [{
                name: 'Quantidade',
                data: [
                    @foreach(var category in Model.CategoryTotalTransactions.Where(x => x.CategoryType == CategoryType.Expense))
                    {
                        @:{ name: '@category.CategoryName', y: @category.TotalAmount },
                    }
                ]
            }]
        });

        var chart2 = Highcharts.chart('chart2', {
            chart: {
                type: 'pie'
            },
            title: {
                text: ''
            },
            credits: {
                enabled: false
            },
            tooltip: {
                enabled: false
            },
            plotOptions: {
                pie: {
                    innerSize: '70%',
                    dataLabels: {
                        enabled: false
                    },
                    showInLegend: false,
                    point: {
                        events: {
                            mouseOver: function () {
                                var centerX = chart2.plotLeft + (chart2.plotWidth * 0.5);
                                var centerY = chart2.plotTop + (chart2.plotHeight * 0.43);

                                var total = 0;
                                for (var i = 0, len = this.series.data.length; i < len; i++) {
                                    total += this.series.data[i].y;
                                }

                                var teste = this.name + '<br><br>' + 'R$ ' + this.y.toFixed(2) + '<br><br>' + (this.y / total * 100).toFixed(2) + '%';

                                chart2.centerText = chart2.renderer.text(teste, centerX, centerY).attr({
                                    align: 'center'
                                }).css({
                                    fontSize: '1.5em',
                                }).add();
                            },
                            mouseOut: function () {
                                chart2.centerText.destroy();
                            }
                        }
                    }
                }
            },
            series: [{
                name: 'Quantidade',
                data: [
                    @foreach(var category in Model.CategoryTotalTransactions.Where(x => x.CategoryType == CategoryType.Income))
                    {
                        @:{ name: '@category.CategoryName', y: @category.TotalAmount },
                    }
                ]
            }]
        });
</script>
